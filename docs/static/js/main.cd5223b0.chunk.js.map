{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","type","checked","onChange","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","ref","placeholder","onClick","current","value","prevTodos","uuid","title","filter","length","newTodos","currentTodo","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKe,SAASA,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAC/BC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAMlB,OACE,sBAAKF,GAAG,cAAR,UACE,6BACGC,IAEH,wBAAOD,GAAG,yBAAV,UACE,uBAAOA,GAAG,qBAAqBG,KAAK,WAAWC,QAASF,EAAWG,SAVjD,WACtBN,EAAWC,MAUP,sBAAMA,GAAG,oB,MCZF,SAASM,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OACE,6BACGQ,EAAMC,KAAI,SAACV,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKE,S,UCHtBS,EAAM,gBAEG,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KAEMC,EAAcC,mBAEpBC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GACFJ,EAASI,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUf,MACxC,CAACA,IAuBJ,OACE,sBAAKgB,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,uBAAOvB,GAAG,YAAYwB,IAAKX,EAAaV,KAAK,OAAOsB,YAAY,aAChE,wBAAQzB,GAAG,WAAWG,KAAK,SAASuB,QAlBpB,WACpB,IAAMzB,EAAOY,EAAYc,QAAQC,MACpB,KAAT3B,IAEJW,GAAS,SAACiB,GAAD,4BAAmBA,GAAnB,CAA8B,CAAE7B,GAAI8B,cAAQ7B,OAAMC,WAAW,QAEtEW,EAAYc,QAAQC,MAAQ,OAYoCG,MAAM,WAAlE,kBAEF,qBAAI/B,GAAG,eAAP,sBAEG,IACAO,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,aAAW+B,OACxC,IAJH,wBAME,wBAAQjC,GAAG,aAAaG,KAAK,SAASuB,QAjBpB,WACtB,IAAMQ,EAAW3B,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,aAC9CU,EAASsB,IAeL,uCAEF,cAAC,EAAD,CAAU3B,MAAOA,EAAOR,WAnCT,SAACC,GAClB,IAAMkC,EAAQ,YAAO3B,GACf4B,EAAcD,EAASE,MAAK,SAACtC,GAAD,OAAUA,EAAKE,KAAOA,KACxDmC,EAAYjC,WAAaiC,EAAYjC,UACrCU,EAASsB,SC7Bb,IAceG,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.cd5223b0.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nimport './TodoItem.css';\r\n\r\nexport default function TodoItem({ todo, toggleTodo }) {\r\n  const { id, task, completed } = todo;\r\n\r\n  const handleTodoClick = () => {\r\n    toggleTodo(id);\r\n  };\r\n\r\n  return (\r\n    <div id=\"li-todoItem\">\r\n      <li>\r\n        {task}\r\n      </li>\r\n      <label id=\"li-todoItem__container\">\r\n        <input id=\"li-todoItem__input\" type=\"checkbox\" checked={completed} onChange={handleTodoClick} />\r\n        <span id=\"checkmark\" />\r\n      </label>\r\n    </div>\r\n\r\n  );\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nimport './TodoList.css';\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport TodoList from './components/TodoList';\r\n\r\nimport './App.css';\r\n\r\nconst KEY = 'todoApp.todos';\r\n\r\nexport default function App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const todoTaskRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\r\n    if (storedTodos) {\r\n      setTodos(storedTodos);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(KEY, JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const toggleTodo = (id) => {\r\n    const newTodos = [...todos];\r\n    const currentTodo = newTodos.find((todo) => todo.id === id);\r\n    currentTodo.completed = !currentTodo.completed;\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const handleTodoAdd = () => {\r\n    const task = todoTaskRef.current.value;\r\n    if (task === '') return;\r\n\r\n    setTodos((prevTodos) => [...prevTodos, { id: uuid(), task, completed: false }]);\r\n\r\n    todoTaskRef.current.value = null;\r\n  };\r\n\r\n  const handleDeleteAll = () => {\r\n    const newTodos = todos.filter((todo) => !todo.completed);\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container-newTask\">\r\n        <input id=\"taskInput\" ref={todoTaskRef} type=\"text\" placeholder=\"New Task\" />\r\n        <button id=\"btn-plus\" type=\"button\" onClick={handleTodoAdd} title=\"Add Task\">+</button>\r\n      </div>\r\n      <h2 id=\"container-h2\">\r\n        Te quedan\r\n        {' '}\r\n        {todos.filter((todo) => !todo.completed).length}\r\n        {' '}\r\n        tareas para terminar.\r\n        <button id=\"btn-delete\" type=\"button\" onClick={handleDeleteAll}>Delete completed tasks</button>\r\n      </h2>\r\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable linebreak-style */\r\nconst reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}